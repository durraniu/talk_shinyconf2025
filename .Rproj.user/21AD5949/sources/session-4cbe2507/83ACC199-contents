---
title: "talk_shinyconf2025"
---

## Title

Building Your Pit of Success: Practical Strategies for Shiny App Development and Deployment

## Talk will contain these tips

* Start with AI. Use Shiny Assistant and Ploomber AI editor for initial wireframing and laying out your app  
* Use bslib for:  
   - creating modern layouts and bootstrap components
   - theming the app with colors and fonts (use brand.yml)  
   - make apps that are responsive on any screen  
  Move to sass package for advanced theming
* Start with functions and modules instead of raw code   
* Use frameworks that encourage best practices such as golem or rhino. They help create:  
  - modules    
  - tests   
  - dockerizing your app
* Monitor your app for errors using tools such as the sentryR package that creates issues based on the errors in the running app. It also shows what OS and browser was being used when the app produced errors  
* Learn from the R community:  
  - Join DSLC slack for joining book clubs about Mastering Shiny, Outstanding User Interfaces for Shiny, Engineering Production Grade Shiny Apps  
  - Shiny Discord
  - Practice creating shiny apps with the new Shiny Meetings project (that I started) where members collaboratively create and deploy an app in 15-days  
* Be creative and push yourself out of your comfort zones:  
  - try creating apps for fun e.g., to automate some of your tasks   
  - apps that use large language models (e.g., my app that creates story text and images using LLMs and render them in a slide deck)  
* Think about the concurrent usage of your app by lots of users. This means use async programming. The new ExtendedTask class makes it much easier than in the past  
* Use ggiraph for interactive visualizations (if needed) that can open modals and do other interactive stuff in the app  
* Deploying your app is challenging. Start easy with Posit Connect Cloud (which is free for now). Use platforms such as Google Cloud Run that automatically does horizontal scaling without you worrying about the traffic



## Abstract

Shiny makes it easy to build interactive web applications with R, but as your apps grow, keeping them efficient and well-structured can be challenging. How do you create apps that are easy to maintain, scale for more users, and also look great? In this talk, I will share practical strategies that have helped me—someone who learned Shiny without a formal software development background—build apps faster and more reliably.


We’ll start with AI-assisted development, using tools like Shiny Assistant and Ploomber AI to quickly generate wireframes and layouts. Then, we’ll explore bslib for modern designs, responsive layouts, and simple theming, and how sass can help customize styles even further. 













I’ll explain why it’s important to use functions and modules from the beginning and how frameworks like golem and rhino enforce best practices for structuring and dockerizing apps, and writing tests.


















Beyond development, I’ll share lessons on monitoring live apps using sentryR to catch errors and improve performance. 

We’ll also talk about handling multiple users with async programming, including how the new ExtendedTask class makes this easier. 

Deploying a Shiny app can feel intimidating, so I’ll share beginner-friendly options like Posit Connect Cloud and more scalable solutions like Google Cloud Run. Whether you're just starting or looking to improve, this talk will give you the tools to Shiny apps with more confidence.

Finally, we’ll discuss learning from the R community, including joining Shiny-related groups and projects like Shiny Meetings, where members collaborate to build and deploy apps together.



